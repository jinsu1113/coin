import cv2
import numpy as np

# 이미지를 불러옵니다.
src = cv2.imread('canvasInput.jpg')

# 이미지를 그레이스케일로 변환합니다.
gray = cv2.cvtColor(src, cv2.COLOR_RGBA2GRAY)

# 이진 임계값을 적용합니다.
_, gray = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

# 침식 및 팽창을 위한 커널을 정의합니다.
M = np.ones((3, 3), np.uint8)

# 침식을 수행합니다.
gray = cv2.erode(gray, M)

# 팽창을 수행합니다.
opening = cv2.dilate(gray, M)

# 추가적인 팽창을 수행합니다.
coinsBg = cv2.dilate(opening, M, iterations=3)

# 거리 변환을 수행합니다.
distTrans = cv2.distanceTransform(opening, cv2.DIST_L2, 5)

# 거리 변환 결과를 정규화합니다.
cv2.normalize(distTrans, distTrans, 1, 0, cv2.NORM_INF)

# 동전을 추출합니다.
_, coinsFg = cv2.threshold(distTrans, 0.7 * distTrans.max(), 255, cv2.THRESH_BINARY)

# 레이블링을 수행하고 연결된 객체를 얻습니다.
num_labels, labels, stats, centroids = cv2.connectedComponentsWithStats(np.uint8(coinsFg))

# 검출된 동전의 개수를 계산합니다 (배경 레이블 제외).
num_coins = num_labels - 1  # 배경 레이블을 제외하기 위해 1을 뺍니다.

print("동전 개수:", num_coins)

# 결과를 표시합니다.
cv2.imshow('canvasOutput', coinsFg)
cv2.waitKey(0)

# 자원을 정리합니다.
cv2.destroyAllWindows()
